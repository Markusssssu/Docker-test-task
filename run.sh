#!/bin/bash

# –£–º–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è DevOps —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é
show_menu() {
    echo -e "${BLUE}=== DevOps Test Task - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===${NC}"
    echo ""
    echo -e "${GREEN}1.${NC} –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ (–í–°–ï –°–†–ê–ó–£!)"
    echo -e "${GREEN}2.${NC} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å nginx –ª–æ–∫–∞–ª—å–Ω–æ"
    echo -e "${GREEN}3.${NC} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker"
    echo -e "${GREEN}4.${NC} –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
    echo -e "${GREEN}5.${NC} –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å docker-compose"
    echo -e "${GREEN}6.${NC} –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ Kubernetes"
    echo -e "${GREEN}7.${NC} –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo -e "${GREEN}8.${NC} –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo -e "${GREEN}9.${NC} –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ (Docker + nginx)"
    echo -e "${GREEN}10.${NC} –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo -e "${GREEN}0.${NC} –í—ã—Ö–æ–¥"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ–≥–æ
auto_install_all() {
    echo -e "${BLUE}=== –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞ ===${NC}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É
    if ! command -v apt-get &> /dev/null; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Ubuntu/Debian —Å–∏—Å—Ç–µ–º${NC}"
        return 1
    fi

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
    echo -e "${YELLOW}1. –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É...${NC}"
    sudo apt update && sudo apt upgrade -y

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx
    echo -e "${YELLOW}2. –ü—Ä–æ–≤–µ—Ä—è–µ–º nginx...${NC}"
    if ! command -v nginx &> /dev/null; then
        echo "Nginx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        sudo apt install -y nginx
        sudo systemctl start nginx
        sudo systemctl enable nginx
        echo -e "${GREEN}Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!${NC}"
    else
        echo -e "${GREEN}Nginx —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
        sudo systemctl start nginx 2>/dev/null || true
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
    echo -e "${YELLOW}3. –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker...${NC}"
    if ! command -v docker &> /dev/null; then
        echo "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
        sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release

        # –î–æ–±–∞–≤–ª—è–µ–º GPG –∫–ª—é—á Docker
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
        sudo apt update
        sudo apt install -y docker-ce docker-ce-cli containerd.io

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
        sudo usermod -aG docker $USER

        # –ó–∞–ø—É—Å–∫–∞–µ–º Docker
        sudo service docker start
        
        echo -e "${GREEN}Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ WSL –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: newgrp docker"
    else
        echo -e "${GREEN}Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
        sudo service docker start 2>/dev/null || true
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º docker-compose
    echo -e "${YELLOW}4. –ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose...${NC}"
    if ! command -v docker-compose &> /dev/null; then
        echo "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        echo -e "${GREEN}Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    else
        echo -e "${GREEN}Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${NC}"
    fi

    # –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    echo -e "${YELLOW}5. –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–µ–∫—Ç...${NC}"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker stop nginx-devops 2>/dev/null || true
    docker rm nginx-devops 2>/dev/null || true
    docker-compose down 2>/dev/null || true

    # –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
    echo "–°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."
    docker build -t nginx-devops .

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å docker-compose
    echo "–ó–∞–ø—É—Å–∫–∞–µ–º —Å docker-compose..."
    docker-compose up -d

    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    echo "–ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞..."
    sleep 5

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    echo -e "${YELLOW}6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...${NC}"
    
    echo -e "${BLUE}=== Nginx (–ª–æ–∫–∞–ª—å–Ω—ã–π) ===${NC}"
    if systemctl is-active --quiet nginx; then
        echo -e "${GREEN}‚úÖ Nginx: –ê–∫—Ç–∏–≤–µ–Ω${NC}"
        if curl -s localhost > /dev/null; then
            echo "   –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost"
        else
            echo "   ‚ö†Ô∏è  –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        fi
    else
        echo -e "${RED}‚ùå Nginx: –ù–µ –∞–∫—Ç–∏–≤–µ–Ω${NC}"
    fi

    echo -e "${BLUE}=== Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ===${NC}"
    if docker ps | grep -q nginx-devops; then
        echo -e "${GREEN}‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: –ó–∞–ø—É—â–µ–Ω${NC}"
        if curl -s localhost:8080 > /dev/null; then
            echo "   –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080"
            echo "   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: $(curl -s localhost:8080 | grep -o '<h1>[^<]*</h1>' | sed 's/<[^>]*>//g')"
        else
            echo "   ‚ö†Ô∏è  –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        fi
    else
        echo -e "${RED}‚ùå Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: –ù–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    fi

    echo ""
    echo -e "${GREEN}=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ===${NC}"
    echo ""
    echo "üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:"
    echo "‚Ä¢ Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ: http://localhost"
    echo "‚Ä¢ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω: http://localhost:8080"
    echo "‚Ä¢ –í—Å–µ –≥–æ—Ç–æ–≤–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏!"
    echo ""
    echo "üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é 7"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ nginx
install_nginx() {
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É
    if ! command -v apt-get &> /dev/null; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Ubuntu/Debian —Å–∏—Å—Ç–µ–º${NC}"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ nginx
    if command -v nginx &> /dev/null; then
        echo -e "${GREEN}Nginx —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        sudo systemctl start nginx
        sudo systemctl enable nginx
        sudo systemctl status nginx
        return 0
    fi

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã
    echo "–û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤..."
    sudo apt update

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx..."
    sudo apt install -y nginx

    # –ó–∞–ø—É—Å–∫–∞–µ–º nginx
    echo "–ó–∞–ø—É—Å–∫–∞–µ–º nginx..."
    sudo systemctl start nginx
    sudo systemctl enable nginx

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å nginx..."
    sudo systemctl status nginx

    echo -e "${GREEN}Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo "–î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
install_docker() {
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É
    if ! command -v apt-get &> /dev/null; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Ubuntu/Debian —Å–∏—Å—Ç–µ–º${NC}"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ Docker
    if command -v docker &> /dev/null; then
        echo -e "${GREEN}Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        sudo service docker start 2>/dev/null || true
        return 0
    fi

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
    echo "–û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
    sudo apt update && sudo apt upgrade -y

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
    sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release

    # –î–æ–±–∞–≤–ª—è–µ–º GPG –∫–ª—é—á Docker
    echo "–î–æ–±–∞–≤–ª—è–µ–º GPG –∫–ª—é—á Docker..."
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker
    echo "–î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker..."
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    # –û–±–Ω–æ–≤–ª—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    sudo apt update
    sudo apt install -y docker-ce docker-ce-cli containerd.io

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    echo "–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker..."
    sudo usermod -aG docker $USER

    # –ó–∞–ø—É—Å–∫–∞–µ–º Docker
    echo "–ó–∞–ø—É—Å–∫–∞–µ–º Docker..."
    sudo service docker start

    echo -e "${GREEN}Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
    echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ WSL –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: newgrp docker"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
run_docker() {
    echo -e "${YELLOW}–ó–∞–ø—É—Å–∫–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
    if ! command -v docker &> /dev/null; then
        echo -e "${RED}–û—à–∏–±–∫–∞: Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker (–æ–ø—Ü–∏—è 2)${NC}"
        return 1
    fi

    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    echo "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker stop nginx-devops 2>/dev/null || true
    docker rm nginx-devops 2>/dev/null || true

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–∑
    echo "–£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–∑..."
    docker rmi nginx-devops 2>/dev/null || true

    # –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
    echo "–°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."
    docker build -t nginx-devops .

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    echo "–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    docker run -d --name nginx-devops -p 8080:80 nginx-devops

    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    echo "–ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    sleep 3

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
    docker ps | grep nginx-devops

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º
    echo "–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å..."
    if curl -s http://localhost:8080 > /dev/null; then
        echo -e "${GREEN}–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080${NC}"
    else
        echo -e "${RED}–û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ docker-compose
run_compose() {
    echo -e "${YELLOW}–ó–∞–ø—É—Å–∫–∞–µ–º —Å docker-compose...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose
    if ! command -v docker-compose &> /dev/null; then
        echo -e "${RED}–û—à–∏–±–∫–∞: docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        return 1
    fi

    # –ó–∞–ø—É—Å–∫–∞–µ–º
    docker-compose up -d

    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    sleep 3

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º
    if curl -s http://localhost:8080 > /dev/null; then
        echo -e "${GREEN}Docker Compose –∑–∞–ø—É—â–µ–Ω! –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080${NC}"
    else
        echo -e "${RED}–û—à–∏–±–∫–∞: —Å–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ Kubernetes
deploy_k8s() {
    echo -e "${YELLOW}–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ–º –≤ Kubernetes...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º kubectl
    if ! command -v kubectl &> /dev/null; then
        echo -e "${RED}–û—à–∏–±–∫–∞: kubectl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞—Å—Ç–µ—Ä
    if ! kubectl cluster-info &> /dev/null; then
        echo -e "${RED}–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Kubernetes –∫–ª–∞—Å—Ç–µ—Ä—É${NC}"
        return 1
    fi

    # –ü—Ä–∏–º–µ–Ω—è–µ–º deployment
    kubectl apply -f deployment.yaml

    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    kubectl wait --for=condition=ready pod -l app=nginx-devops --timeout=60s

    echo -e "${GREEN}Kubernetes deployment –ø—Ä–∏–º–µ–Ω–µ–Ω!${NC}"
    kubectl get pods -l app=nginx-devops
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    
    echo -e "${BLUE}=== Nginx ===${NC}"
    if systemctl is-active --quiet nginx; then
        echo -e "${GREEN}Nginx: –ê–∫—Ç–∏–≤–µ–Ω${NC}"
        curl -s localhost > /dev/null && echo "–î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost" || echo "–ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    else
        echo -e "${RED}Nginx: –ù–µ –∞–∫—Ç–∏–≤–µ–Ω${NC}"
    fi

    echo -e "${BLUE}=== Docker ===${NC}"
    if command -v docker &> /dev/null; then
        if docker ps | grep -q nginx-devops; then
            echo -e "${GREEN}Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: –ó–∞–ø—É—â–µ–Ω${NC}"
            curl -s localhost:8080 > /dev/null && echo "–î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080" || echo "–ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        else
            echo -e "${YELLOW}Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: –ù–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        fi
    else
        echo -e "${RED}Docker: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi

    echo -e "${BLUE}=== Kubernetes ===${NC}"
    if command -v kubectl &> /dev/null; then
        if kubectl get pods -l app=nginx-devops 2>/dev/null | grep -q Running; then
            echo -e "${GREEN}Kubernetes pods: –ó–∞–ø—É—â–µ–Ω—ã${NC}"
        else
            echo -e "${YELLOW}Kubernetes pods: –ù–µ –∑–∞–ø—É—â–µ–Ω—ã${NC}"
        fi
    else
        echo -e "${RED}Kubernetes: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
stop_all() {
    echo -e "${YELLOW}–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã...${NC}"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx
    sudo systemctl stop nginx 2>/dev/null || true
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker stop nginx-devops 2>/dev/null || true
    docker-compose down 2>/dev/null || true
    
    # –£–¥–∞–ª—è–µ–º –∏–∑ Kubernetes
    kubectl delete -f deployment.yaml 2>/dev/null || true
    
    echo -e "${GREEN}–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
clean_all() {
    echo -e "${YELLOW}–û—á–∏—â–∞–µ–º –≤—Å–µ...${NC}"
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx
    sudo systemctl stop nginx 2>/dev/null || true
    sudo systemctl disable nginx 2>/dev/null || true
    
    # –û—á–∏—â–∞–µ–º Docker
    docker stop $(docker ps -aq) 2>/dev/null || true
    docker rm $(docker ps -aq) 2>/dev/null || true
    docker rmi nginx-devops 2>/dev/null || true
    docker system prune -f
    
    echo -e "${GREEN}–í—Å–µ –æ—á–∏—â–µ–Ω–æ!${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo -e "${YELLOW}–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏...${NC}"
    
    echo -e "${BLUE}=== Nginx –ª–æ–≥–∏ ===${NC}"
    sudo tail -10 /var/log/nginx/access.log 2>/dev/null || echo "–õ–æ–≥–∏ nginx –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
    
    echo -e "${BLUE}=== Docker –ª–æ–≥–∏ ===${NC}"
    docker logs nginx-devops 2>/dev/null || echo "Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
}

# –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
while true; do
    show_menu
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (0-10): " choice
    
    case $choice in
        1) auto_install_all ;;
        2) install_nginx ;;
        3) install_docker ;;
        4) run_docker ;;
        5) run_compose ;;
        6) deploy_k8s ;;
        7) check_status ;;
        8) stop_all ;;
        9) clean_all ;;
        10) show_logs ;;
        0) echo -e "${GREEN}–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"; exit 0 ;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}" ;;
    esac
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    clear
done 